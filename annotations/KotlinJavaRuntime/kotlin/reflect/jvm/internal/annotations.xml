<root>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl kotlin.reflect.KMutableTopLevelExtensionProperty&lt;T,?&gt; mutableTopLevelExtensionProperty(java.lang.String, java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KTopLevelExtensionPropertyImpl KTopLevelExtensionPropertyImpl(kotlin.reflect.jvm.internal.KPackageImpl, java.lang.String, java.lang.Class&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty kotlin.reflect.jvm.internal.DescriptorBasedProperty.PropertyProtoData access$getProtoData$0(kotlin.reflect.jvm.internal.DescriptorBasedProperty) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableMemberExtensionPropertyImpl void set(D, E, R) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionObjectRenderer INSTANCE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KMutableTopLevelVariable mutableTopLevelVariable(java.lang.String, kotlin.reflect.KPackage) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty DescriptorBasedProperty(kotlin.reflect.jvm.internal.KCallableContainerImpl, java.lang.String, java.lang.Class&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableTopLevelVariableImpl KMutableTopLevelVariableImpl(kotlin.reflect.jvm.internal.KPackageImpl, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KMutableMemberProperty mutableMemberProperty(java.lang.String, kotlin.reflect.KClass)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.InternalPackage kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.RuntimeModuleData getOrCreateModule(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionObjectRenderer java.lang.String renderProperty(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableMemberExtensionPropertyImpl KMutableMemberExtensionPropertyImpl(kotlin.reflect.jvm.internal.KClassImpl&lt;D&gt;, java.lang.String, java.lang.Class&lt;E&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KPackage createKotlinPackage(java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl kotlin.reflect.KTopLevelVariable&lt;?&gt; topLevelVariable(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.RuntimeTypeMapper java.lang.String access$getDesc$0(kotlin.reflect.jvm.internal.RuntimeTypeMapper, kotlin.reflect.jvm.internal.impl.name.ClassId) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl kotlin.reflect.jvm.internal.impl.name.ClassId access$getClassId$0(kotlin.reflect.jvm.internal.KClassImpl&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl kotlin.reflect.KMutableTopLevelVariable&lt;?&gt; mutableTopLevelVariable(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableContainerImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor findPropertyDescriptor$default(kotlin.reflect.jvm.internal.KCallableContainerImpl, java.lang.String, java.lang.String, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl KClassImpl(java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMemberPropertyImpl R get(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KTopLevelVariableImpl KTopLevelVariableImpl(kotlin.reflect.jvm.internal.KPackageImpl, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KTopLevelExtensionPropertyImpl KTopLevelExtensionPropertyImpl(kotlin.reflect.jvm.internal.KPackageImpl, java.lang.String, java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.InternalPackage.foreignKClasses.29842fc1 kotlin.reflect.jvm.internal.KClassImpl&lt;T&gt; foreignKotlinClass(java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl kotlin.reflect.KTopLevelExtensionProperty&lt;T,?&gt; topLevelExtensionProperty(java.lang.String, java.lang.Class&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableContainerImpl java.lang.Class&lt;?&gt; access$loadJvmType$1(kotlin.reflect.jvm.internal.KCallableContainerImpl, kotlin.reflect.jvm.internal.impl.serialization.jvm.JvmProtoBuf.JvmType, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, java.lang.ClassLoader, int) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KMutableTopLevelExtensionProperty mutableTopLevelExtensionProperty(java.lang.String, kotlin.reflect.KPackage, java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl java.util.Collection&lt;kotlin.reflect.KMemberExtensionProperty&lt;T,?,?&gt;&gt; getExtensionProperties(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.InternalPackage.foreignKClasses.29842fc1 void setFOREIGN_K_CLASSES(kotlin.reflect.jvm.internal.pcollections.HashPMap&lt;java.lang.String,java.lang.Object&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl kotlin.reflect.KMutableTopLevelExtensionProperty&lt;T,?&gt; mutableTopLevelExtensionProperty(java.lang.String, java.lang.Class&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.InternalPackage.moduleByClassLoader.b5bf4708 kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.RuntimeModuleData getOrCreateModule(java.lang.Class&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableTopLevelVariableImpl KMutableTopLevelVariableImpl(kotlin.reflect.jvm.internal.KPackageImpl, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableContainerImpl.Companion java.util.Map&lt;kotlin.reflect.jvm.internal.impl.serialization.jvm.JvmProtoBuf.JvmType.PrimitiveType,java.lang.Class&lt;? extends java.lang.Object&gt;&gt; access$getPRIMITIVE_TYPES$0(kotlin.reflect.jvm.internal.KCallableContainerImpl.Companion)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KTopLevelExtensionProperty topLevelExtensionProperty(java.lang.String, kotlin.reflect.KPackage, java.lang.Class) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableContainerImpl java.lang.reflect.Method findMethodBySignature(kotlin.reflect.jvm.internal.impl.serialization.jvm.JvmProtoBuf.JvmMethodSignature, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl kotlin.reflect.KMutableMemberProperty&lt;T,?&gt; mutableMemberProperty(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KTopLevelVariableImpl java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableMemberExtensionPropertyImpl KMutableMemberExtensionPropertyImpl(kotlin.reflect.jvm.internal.KClassImpl&lt;D&gt;, java.lang.String, java.lang.Class&lt;E&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableMemberPropertyImpl KMutableMemberPropertyImpl(kotlin.reflect.jvm.internal.KClassImpl&lt;T&gt;, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableContainerImpl java.lang.Class&lt;?&gt; getjClass()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionObjectRenderer java.lang.String renderProperty(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KTopLevelVariable topLevelVariable(java.lang.String, kotlin.reflect.KPackage)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMemberPropertyImpl KMemberPropertyImpl(kotlin.reflect.jvm.internal.KClassImpl&lt;T&gt;, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.WeakClassLoaderBox java.lang.ref.WeakReference&lt;java.lang.ClassLoader&gt; getRef()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KMemberProperty memberProperty(java.lang.String, kotlin.reflect.KClass) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.RuntimeTypeMapper java.lang.String mapTypeToJvmDesc(kotlin.reflect.jvm.internal.impl.types.JetType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty DescriptorBasedProperty(kotlin.reflect.jvm.internal.KCallableContainerImpl, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.InternalPackage kotlin.reflect.jvm.internal.pcollections.HashPMap&lt;java.lang.String,java.lang.Object&gt; getFOREIGN_K_CLASSES()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectProperties.Val java.lang.Object escape(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.RuntimeTypeMapper java.lang.String access$getDesc$0(kotlin.reflect.jvm.internal.RuntimeTypeMapper, kotlin.reflect.jvm.internal.impl.name.ClassId)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectProperties.LazyWeakVal LazyWeakVal(kotlin.jvm.functions.Function0&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl.getProperties..inlined.filterIsInstance.1 INSTANCE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl kotlin.reflect.jvm.internal.impl.resolve.scopes.JetScope getScope()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableContainerImpl java.lang.reflect.Field findFieldBySignature(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, kotlin.reflect.jvm.internal.impl.serialization.jvm.JvmProtoBuf.JvmFieldSignature, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMemberExtensionPropertyImpl KMemberExtensionPropertyImpl(kotlin.reflect.jvm.internal.KClassImpl&lt;D&gt;, java.lang.String, java.lang.Class&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.InternalPackage kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.RuntimeModuleData getOrCreateModule(java.lang.Class&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectProperties.LazyVal LazyVal(kotlin.jvm.functions.Function0&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableContainerImpl java.lang.reflect.Method findMethodBySignature(kotlin.reflect.jvm.internal.impl.serialization.jvm.JvmProtoBuf.JvmMethodSignature, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor getDescriptor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty kotlin.reflect.jvm.internal.DescriptorBasedProperty access$init$1(kotlin.reflect.jvm.internal.KCallableContainerImpl, java.lang.String, java.lang.String, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KMutableMemberProperty mutableMemberProperty(java.lang.String, kotlin.reflect.KClass) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableMemberExtensionPropertyImpl KMutableMemberExtensionPropertyImpl(kotlin.reflect.jvm.internal.KClassImpl&lt;D&gt;, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl kotlin.reflect.jvm.internal.impl.name.ClassId access$getClassId$0(kotlin.reflect.jvm.internal.KClassImpl&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.RuntimeTypeMapper kotlin.reflect.jvm.internal.impl.name.ClassId mapJvmClassToKotlinClassId(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty DescriptorBasedProperty(kotlin.reflect.jvm.internal.KCallableContainerImpl, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KClass createKotlinClass(java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableContainerImpl Companion'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl java.lang.Class&lt;T&gt; getjClass()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableTopLevelExtensionPropertyImpl KMutableTopLevelExtensionPropertyImpl(kotlin.reflect.jvm.internal.KPackageImpl, java.lang.String, java.lang.Class&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.RuntimeTypeMapper kotlin.reflect.jvm.internal.impl.name.ClassId mapJvmClassToKotlinClassId(java.lang.Class&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.InternalPackage.foreignKClasses.29842fc1 kotlin.reflect.jvm.internal.pcollections.HashPMap&lt;java.lang.String,java.lang.Object&gt; getFOREIGN_K_CLASSES()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty DescriptorBasedProperty(kotlin.reflect.jvm.internal.KCallableContainerImpl, java.lang.String, java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableTopLevelExtensionPropertyImpl KMutableTopLevelExtensionPropertyImpl(kotlin.reflect.jvm.internal.KPackageImpl, java.lang.String, java.lang.Class&lt;T&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.WeakClassLoaderBox WeakClassLoaderBox(java.lang.ClassLoader) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KPackage createKotlinPackage(java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl kotlin.reflect.KMutableTopLevelExtensionProperty&lt;T,?&gt; mutableTopLevelExtensionProperty(java.lang.String, java.lang.Class&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMemberExtensionPropertyImpl KMemberExtensionPropertyImpl(kotlin.reflect.jvm.internal.KClassImpl&lt;D&gt;, java.lang.String, java.lang.Class&lt;E&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMemberPropertyImpl java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableMemberExtensionPropertyImpl KMutableMemberExtensionPropertyImpl(kotlin.reflect.jvm.internal.KClassImpl&lt;D&gt;, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl kotlin.reflect.KMutableTopLevelVariable&lt;?&gt; mutableTopLevelVariable(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KMutableTopLevelExtensionProperty mutableTopLevelExtensionProperty(java.lang.String, kotlin.reflect.KPackage, java.lang.Class) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.InternalPackage void setFOREIGN_K_CLASSES(kotlin.reflect.jvm.internal.pcollections.HashPMap&lt;java.lang.String,java.lang.Object&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.RuntimeTypeMapper java.lang.String access$getDesc$0(kotlin.reflect.jvm.internal.RuntimeTypeMapper, kotlin.reflect.jvm.internal.impl.name.ClassId) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl java.util.Collection&lt;kotlin.reflect.KMemberProperty&lt;T,?&gt;&gt; getProperties()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMemberExtensionPropertyImpl R get(D, E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KMutableMemberProperty mutableMemberProperty(java.lang.String, kotlin.reflect.KClass) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableMemberPropertyImpl void set(T, R) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KClass createKotlinClass(java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KTopLevelVariable topLevelVariable(java.lang.String, kotlin.reflect.KPackage) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableContainerImpl java.lang.Class&lt;?&gt; access$loadJvmType$1(kotlin.reflect.jvm.internal.KCallableContainerImpl, kotlin.reflect.jvm.internal.impl.serialization.jvm.JvmProtoBuf.JvmType, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, java.lang.ClassLoader, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMemberPropertyImpl KMemberPropertyImpl(kotlin.reflect.jvm.internal.KClassImpl&lt;T&gt;, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableTopLevelExtensionPropertyImpl KMutableTopLevelExtensionPropertyImpl(kotlin.reflect.jvm.internal.KPackageImpl, java.lang.String, java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableMemberPropertyImpl KMutableMemberPropertyImpl(kotlin.reflect.jvm.internal.KClassImpl&lt;T&gt;, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl kotlin.reflect.KTopLevelExtensionProperty&lt;T,?&gt; topLevelExtensionProperty(java.lang.String, java.lang.Class&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty kotlin.reflect.jvm.internal.DescriptorBasedProperty access$init$1(kotlin.reflect.jvm.internal.KCallableContainerImpl, java.lang.String, java.lang.String, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.WeakClassLoaderBox java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMemberExtensionPropertyImpl KMemberExtensionPropertyImpl(kotlin.reflect.jvm.internal.KClassImpl&lt;D&gt;, java.lang.String, java.lang.Class&lt;E&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableContainerImpl java.lang.reflect.Field findFieldBySignature(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, kotlin.reflect.jvm.internal.impl.serialization.jvm.JvmProtoBuf.JvmFieldSignature, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl kotlin.reflect.KMutableMemberProperty&lt;T,?&gt; mutableMemberProperty(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KMutableTopLevelExtensionProperty mutableTopLevelExtensionProperty(java.lang.String, kotlin.reflect.KPackage, java.lang.Class) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionObjectRenderer kotlin.reflect.jvm.internal.impl.renderer.DescriptorRenderer access$getRenderer$0(kotlin.reflect.jvm.internal.ReflectionObjectRenderer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KMemberProperty memberProperty(java.lang.String, kotlin.reflect.KClass) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KMutableTopLevelVariable mutableTopLevelVariable(java.lang.String, kotlin.reflect.KPackage)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.InternalPackage.moduleByClassLoader.b5bf4708 java.util.concurrent.ConcurrentMap&lt;kotlin.reflect.jvm.internal.WeakClassLoaderBox,java.lang.ref.WeakReference&lt;kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.RuntimeModuleData&gt;&gt; getModuleByClassLoader()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.InternalPackage.moduleByClassLoader.b5bf4708 kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.RuntimeModuleData getOrCreateModule(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMemberPropertyImpl KMemberPropertyImpl(kotlin.reflect.jvm.internal.KClassImpl&lt;T&gt;, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableContainerImpl.Companion java.util.Map&lt;kotlin.reflect.jvm.internal.impl.serialization.jvm.JvmProtoBuf.JvmType.PrimitiveType,java.lang.Class&lt;? extends java.lang.Object&gt;&gt; access$getPRIMITIVE_TYPES$0(kotlin.reflect.jvm.internal.KCallableContainerImpl.Companion) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableMemberPropertyImpl KMutableMemberPropertyImpl(kotlin.reflect.jvm.internal.KClassImpl&lt;T&gt;, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableContainerImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor findPropertyDescriptor(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.RuntimeTypeMapper java.lang.String mapTypeToJvmDesc(kotlin.reflect.jvm.internal.impl.types.JetType)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KMemberProperty memberProperty(java.lang.String, kotlin.reflect.KClass)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty kotlin.reflect.jvm.internal.DescriptorBasedProperty access$init$1(kotlin.reflect.jvm.internal.KCallableContainerImpl, java.lang.String, java.lang.String, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KMutableTopLevelExtensionProperty mutableTopLevelExtensionProperty(java.lang.String, kotlin.reflect.KPackage, java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableContainerImpl java.lang.reflect.Field findFieldBySignature(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, kotlin.reflect.jvm.internal.impl.serialization.jvm.JvmProtoBuf.JvmFieldSignature, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableContainerImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor findPropertyDescriptor$default(kotlin.reflect.jvm.internal.KCallableContainerImpl, java.lang.String, java.lang.String, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KClass foreignKotlinClass(java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl kotlin.reflect.KTopLevelExtensionProperty&lt;T,?&gt; topLevelExtensionProperty(java.lang.String, java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableContainerImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor findPropertyDescriptor$default(kotlin.reflect.jvm.internal.KCallableContainerImpl, java.lang.String, java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl kotlin.reflect.jvm.internal.impl.resolve.scopes.JetScope getScope()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KTopLevelExtensionPropertyImpl java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableContainerImpl java.util.Map&lt;kotlin.reflect.jvm.internal.impl.serialization.jvm.JvmProtoBuf.JvmType.PrimitiveType,java.lang.Class&lt;? extends java.lang.Object&gt;&gt; access$getPRIMITIVE_TYPES$0()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KTopLevelVariableImpl KTopLevelVariableImpl(kotlin.reflect.jvm.internal.KPackageImpl, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableContainerImpl.Companion kotlin.reflect.jvm.internal.KCallableContainerImpl.Companion access$init$1()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableContainerImpl java.lang.Class&lt;?&gt; access$loadJvmType$1(kotlin.reflect.jvm.internal.KCallableContainerImpl, kotlin.reflect.jvm.internal.impl.serialization.jvm.JvmProtoBuf.JvmType, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, java.lang.ClassLoader, int) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableContainerImpl java.lang.Class&lt;?&gt; access$loadJvmType$1(kotlin.reflect.jvm.internal.KCallableContainerImpl, kotlin.reflect.jvm.internal.impl.serialization.jvm.JvmProtoBuf.JvmType, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, java.lang.ClassLoader, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl java.util.Collection&lt;kotlin.reflect.KMemberExtensionProperty&lt;T,?,?&gt;&gt; getExtensionProperties()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMemberExtensionPropertyImpl KMemberExtensionPropertyImpl(kotlin.reflect.jvm.internal.KClassImpl&lt;D&gt;, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectProperties.LazySoftVal LazySoftVal(T, kotlin.jvm.functions.Function0&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableContainerImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor findPropertyDescriptor(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl java.util.Collection&lt;kotlin.reflect.KMemberProperty&lt;T,?&gt;&gt; getProperties(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KTopLevelExtensionProperty topLevelExtensionProperty(java.lang.String, kotlin.reflect.KPackage, java.lang.Class) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableMemberExtensionPropertyImpl KMutableMemberExtensionPropertyImpl(kotlin.reflect.jvm.internal.KClassImpl&lt;D&gt;, java.lang.String, java.lang.Class&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl java.lang.Class&lt;?&gt; getjClass()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableMemberPropertyImpl KMutableMemberPropertyImpl(kotlin.reflect.jvm.internal.KClassImpl&lt;T&gt;, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMemberPropertyImpl KMemberPropertyImpl(kotlin.reflect.jvm.internal.KClassImpl&lt;T&gt;, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.RuntimeTypeMapper INSTANCE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KTopLevelExtensionProperty topLevelExtensionProperty(java.lang.String, kotlin.reflect.KPackage, java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableContainerImpl OBJECT$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl kotlin.reflect.KMemberProperty&lt;T,?&gt; memberProperty(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMemberExtensionPropertyImpl java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.InternalPackage java.util.concurrent.ConcurrentMap&lt;kotlin.reflect.jvm.internal.WeakClassLoaderBox,java.lang.ref.WeakReference&lt;kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.RuntimeModuleData&gt;&gt; getModuleByClassLoader()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl KPackageImpl(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KTopLevelVariable topLevelVariable(java.lang.String, kotlin.reflect.KPackage) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KMutableTopLevelVariable mutableTopLevelVariable(java.lang.String, kotlin.reflect.KPackage) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMemberExtensionPropertyImpl KMemberExtensionPropertyImpl(kotlin.reflect.jvm.internal.KClassImpl&lt;D&gt;, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableContainerImpl java.lang.Class&lt;?&gt; access$loadJvmType$1(kotlin.reflect.jvm.internal.KCallableContainerImpl, kotlin.reflect.jvm.internal.impl.serialization.jvm.JvmProtoBuf.JvmType, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, java.lang.ClassLoader, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KTopLevelExtensionPropertyImpl KTopLevelExtensionPropertyImpl(kotlin.reflect.jvm.internal.KPackageImpl, java.lang.String, java.lang.Class&lt;T&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KTopLevelExtensionProperty topLevelExtensionProperty(java.lang.String, kotlin.reflect.KPackage, java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl kotlin.reflect.KMemberProperty&lt;T,?&gt; memberProperty(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableContainerImpl kotlin.reflect.jvm.internal.impl.resolve.scopes.JetScope getScope()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl kotlin.reflect.KTopLevelVariable&lt;?&gt; topLevelVariable(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.InternalPackage kotlin.reflect.jvm.internal.KClassImpl&lt;T&gt; foreignKotlinClass(java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
