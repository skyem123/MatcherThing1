<root>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorImpl java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl initialize(kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor&gt;, java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt;, kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeParameterDescriptor kotlin.reflect.jvm.internal.impl.types.Variance getVariance()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazySubstitutingClassDescriptor kotlin.reflect.jvm.internal.impl.resolve.scopes.JetScope getUnsubstitutedInnerClassesScope()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorVisitorEmptyBodies R visitModuleDeclaration(kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor, D) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ScriptCodeDescriptor void initialize(kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor, java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt;, kotlin.reflect.jvm.internal.impl.types.JetType) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl SimpleFunctionDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.SimpleFunctionDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor create(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.storage.NotNullLazyValue&lt;java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.name.Name&gt;&gt;, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.ClassKind getKind()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.Modality getModality()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor createWithDefaultBound(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, boolean, kotlin.reflect.jvm.internal.impl.types.Variance, kotlin.reflect.jvm.internal.impl.name.Name, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertySetterDescriptorImpl PropertySetterDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.PropertySetterDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.VariableDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor getContainingDeclaration()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.VariableDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorImpl ClassDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.Modality, java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.types.JetType&gt;, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazySubstitutingClassDescriptor kotlin.reflect.jvm.internal.impl.resolve.scopes.JetScope getStaticScope()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentProvider access$getPackageFragmentProviderForModuleContent$2(kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorVisitorEmptyBodies R visitModuleDeclaration(kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor, D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl PropertyDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor create(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.storage.NotNullLazyValue&lt;java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.name.Name&gt;&gt;, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractLazyTypeParameterDescriptor kotlin.reflect.jvm.internal.impl.types.TypeConstructor createTypeConstructor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.VariableDescriptorImpl java.util.Set&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor&gt; getOverriddenDescriptors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractClassDescriptor kotlin.reflect.jvm.internal.impl.resolve.scopes.JetScope getUnsubstitutedInnerClassesScope()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorImpl ClassDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.Modality, java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.types.JetType&gt;, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertySetterDescriptorImpl PropertySetterDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.PropertySetterDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.VariableDescriptorImpl kotlin.reflect.jvm.internal.impl.types.JetType getReturnType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertySetterDescriptorImpl PropertySetterDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.PropertySetterDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl void addOverriddenDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeParameterDescriptor AbstractTypeParameterDescriptor(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.types.Variance, boolean, int, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 7'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor createWithDefaultBound(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, boolean, kotlin.reflect.jvm.internal.impl.types.Variance, kotlin.reflect.jvm.internal.impl.name.Name, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl PropertyDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 7'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorVisitorEmptyBodies R visitTypeParameterDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor, D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor create(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.storage.NotNullLazyValue&lt;java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.name.Name&gt;&gt;, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorImpl ClassDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.Modality, java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.types.JetType&gt;, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractReceiverParameterDescriptor java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor&gt; getTypeParameters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorImpl java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor&gt; getConstructors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl&gt; access$getDependencies$1(kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl createSubstitutedCopy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor create(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.storage.NotNullLazyValue&lt;java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.name.Name&gt;&gt;, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractReceiverParameterDescriptor kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazySubstitutingClassDescriptor kotlin.reflect.jvm.internal.impl.types.TypeConstructor getTypeConstructor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl PropertyDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 8'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor createWithDefaultBound(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, boolean, kotlin.reflect.jvm.internal.impl.types.Variance, kotlin.reflect.jvm.internal.impl.name.Name, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorVisitorEmptyBodies R visitTypeParameterDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor, D) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazySubstitutingClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor getThisAsReceiverParameter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl&gt; access$getDependencies$1(kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ScriptCodeDescriptor kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor create(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.storage.NotNullLazyValue&lt;java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.name.Name&gt;&gt;, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractClassDescriptor R accept(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptorVisitor&lt;R,D&gt;, D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeParameterDescriptor kotlin.reflect.jvm.internal.impl.types.TypeConstructor getTypeConstructor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorImpl ClassDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.Modality, java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.types.JetType&gt;, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl createSubstitutedCopy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.name.Name) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeParameterDescriptor AbstractTypeParameterDescriptor(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.types.Variance, boolean, int, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertySetterDescriptorImpl PropertySetterDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.PropertySetterDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 8'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations getAnnotations()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageViewDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor access$getModule$2(kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageViewDescriptorImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.Modality getModality()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor doSubstitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl void addOverriddenDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazySubstitutingClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl R accept(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptorVisitor&lt;R,D&gt;, D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl void access$setPackageFragmentProviderForModuleContent$2(kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl, kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentProvider) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl PropertyAccessorDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, boolean, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorImpl void setPrimaryConstructor(kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.PropertyAccessorDescriptor&gt; getAccessors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl initialize(java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor&gt;, java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt;, kotlin.reflect.jvm.internal.impl.descriptors.Visibility)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl createSubstitutedCopy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeParameterDescriptor AbstractTypeParameterDescriptor(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.types.Variance, boolean, int, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.name.Name) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.Visibility getVisibility()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeParameterDescriptor java.util.Set&lt;kotlin.reflect.jvm.internal.impl.types.JetType&gt; getLowerBounds()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl create(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl PropertyAccessorDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, boolean, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.Visibility getVisibility()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl PropertyAccessorDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, boolean, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AnonymousFunctionDescriptor AnonymousFunctionDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl SimpleFunctionDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.SimpleFunctionDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazySubstitutingClassDescriptor void acceptVoid(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptorVisitor&lt;java.lang.Void,java.lang.Void&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageViewDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor access$getModule$2(kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageViewDescriptorImpl)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.VariableDescriptorImpl kotlin.reflect.jvm.internal.impl.types.JetType getType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl ValueParameterDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor, int, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.types.JetType, boolean, kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 8'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorNonRootImpl kotlin.reflect.jvm.internal.impl.descriptors.SourceElement getSource()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorImpl kotlin.reflect.jvm.internal.impl.types.TypeConstructor getTypeConstructor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl java.util.Set&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor&gt; getOverriddenDescriptors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeParameterDescriptor AbstractTypeParameterDescriptor(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.types.Variance, boolean, int, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl void setType(kotlin.reflect.jvm.internal.impl.types.JetType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl PropertyAccessorDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, boolean, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.PackageViewDescriptor getPackage(kotlin.reflect.jvm.internal.impl.name.FqName) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl initialize(java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor&gt;, java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt;, kotlin.reflect.jvm.internal.impl.descriptors.Visibility) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorImpl kotlin.reflect.jvm.internal.impl.resolve.scopes.JetScope getStaticScope()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl SimpleFunctionDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.SimpleFunctionDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl FunctionDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorImpl ClassDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.Modality, java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.types.JetType&gt;, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionExpressionDescriptor FunctionExpressionDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractReceiverParameterDescriptor kotlin.reflect.jvm.internal.impl.descriptors.SourceElement getSource()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl initialize(kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor&gt;, java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt;, kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor create(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.storage.NotNullLazyValue&lt;java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.name.Name&gt;&gt;, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl void addOverriddenDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertySetterDescriptorImpl java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt; getValueParameters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeParameterDescriptor AbstractTypeParameterDescriptor(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.types.Variance, boolean, int, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazySubstitutingClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl kotlin.reflect.jvm.internal.impl.platform.PlatformToKotlinClassMap getPlatformToKotlinClassMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl createSubstitutedCopy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl PropertyAccessorDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, boolean, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeParameterDescriptor kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazySubstitutingClassDescriptor R accept(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptorVisitor&lt;R,D&gt;, D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor kotlin.reflect.jvm.internal.impl.resolve.scopes.JetScope getScopeForMemberLookup()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl initialize(java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor&gt;, java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt;, kotlin.reflect.jvm.internal.impl.descriptors.Visibility) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.name.Name)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageFragmentDescriptorImpl R accept(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptorVisitor&lt;R,D&gt;, D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl SimpleFunctionDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.SimpleFunctionDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeParameterDescriptor kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionExpressionDescriptor FunctionExpressionDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl initialize(kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor&gt;, java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt;, kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazySubstitutingClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeParameterDescriptor java.util.Set&lt;kotlin.reflect.jvm.internal.impl.types.JetType&gt; getUpperBounds()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.VariableDescriptorImpl VariableDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.SimpleFunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyGetterDescriptorImpl PropertyGetterDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.PropertyGetterDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeParameterDescriptorImpl createForFurtherModification(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, boolean, kotlin.reflect.jvm.internal.impl.types.Variance, kotlin.reflect.jvm.internal.impl.name.Name, int, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazyClassReceiverParameterDescriptor kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor getContainingDeclaration()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl PropertyAccessorDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, boolean, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 8'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractReceiverParameterDescriptor kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ScriptCodeDescriptor kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorNonRootImpl DeclarationDescriptorNonRootImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.name.FqName&gt; getSubPackagesOf(kotlin.reflect.jvm.internal.impl.name.FqName, kotlin.jvm.functions.Function1&lt;? super kotlin.reflect.jvm.internal.impl.name.Name,? extends java.lang.Boolean&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SubpackagesScope java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor&gt; getDescriptors(kotlin.reflect.jvm.internal.impl.resolve.scopes.DescriptorKindFilter, kotlin.jvm.functions.Function1&lt;? super kotlin.reflect.jvm.internal.impl.name.Name,? extends java.lang.Boolean&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyGetterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AnonymousFunctionDescriptor AnonymousFunctionDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertySetterDescriptorImpl void initialize(kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionExpressionDescriptor FunctionExpressionDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionExpressionDescriptor FunctionExpressionDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractClassDescriptor kotlin.reflect.jvm.internal.impl.types.JetType getDefaultType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.VariableDescriptorImpl VariableDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor&gt; getTypeParameters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyGetterDescriptorImpl PropertyGetterDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.PropertyGetterDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractReceiverParameterDescriptor kotlin.reflect.jvm.internal.impl.descriptors.ParameterDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeParameterDescriptorImpl createForFurtherModification(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, boolean, kotlin.reflect.jvm.internal.impl.types.Variance, kotlin.reflect.jvm.internal.impl.name.Name, int, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageFragmentDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor getContainingDeclaration()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl initialize(java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor&gt;, java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt;, kotlin.reflect.jvm.internal.impl.descriptors.Visibility) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyAccessorDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl ConstructorDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ScriptCodeDescriptor kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorNonRootImpl DeclarationDescriptorNonRootImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ReceiverParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.types.JetType getType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.name.FqName&gt; getSubPackagesOf(kotlin.reflect.jvm.internal.impl.name.FqName, kotlin.jvm.functions.Function1&lt;? super kotlin.reflect.jvm.internal.impl.name.Name,? extends java.lang.Boolean&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.CompositePackageFragmentProvider java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.name.FqName&gt; getSubPackagesOf(kotlin.reflect.jvm.internal.impl.name.FqName, kotlin.jvm.functions.Function1&lt;? super kotlin.reflect.jvm.internal.impl.name.Name,? extends java.lang.Boolean&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl boolean isFriend(kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl void setType(kotlin.reflect.jvm.internal.impl.types.JetType, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor&gt;, kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor, kotlin.reflect.jvm.internal.impl.types.JetType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionExpressionDescriptor FunctionExpressionDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorImpl kotlin.reflect.jvm.internal.impl.resolve.scopes.JetScope getScopeForMemberLookup()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.VariableDescriptorImpl VariableDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorVisitorEmptyBodies R visitValueParameterDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor, D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl void initialize(kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentProvider) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeParameterDescriptorImpl createForFurtherModification(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, boolean, kotlin.reflect.jvm.internal.impl.types.Variance, kotlin.reflect.jvm.internal.impl.name.Name, int, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractReceiverParameterDescriptor kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorVisitorEmptyBodies R visitPackageViewDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.PackageViewDescriptor, D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ScriptCodeDescriptor kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AnonymousFunctionDescriptor AnonymousFunctionDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyGetterDescriptorImpl PropertyGetterDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.PropertyGetterDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazySubstitutingClassDescriptor kotlin.reflect.jvm.internal.impl.types.JetType getDefaultType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl void setType(kotlin.reflect.jvm.internal.impl.types.JetType, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor&gt;, kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor, kotlin.reflect.jvm.internal.impl.types.JetType) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeParameterDescriptor AbstractTypeParameterDescriptor(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.types.Variance, boolean, int, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl initialize(kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor&gt;, java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt;, kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl PropertyDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorVisitorEmptyBodies R visitValueParameterDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor, D) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertySetterDescriptorImpl R accept(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptorVisitor&lt;R,D&gt;, D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.types.TypeConstructor createTypeConstructor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorVisitorEmptyBodies R visitPackageViewDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.PackageViewDescriptor, D) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl createSubstitutedCopy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ScriptCodeDescriptor kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorImpl java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageFragmentDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor getContainingDeclaration()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl R accept(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptorVisitor&lt;R,D&gt;, D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AnonymousFunctionDescriptor AnonymousFunctionDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl ConstructorDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyGetterDescriptorImpl java.util.Set&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.PropertyAccessorDescriptor&gt; getOverriddenDescriptors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl initialize(kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor&gt;, java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt;, kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl create(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl java.util.Set&lt;kotlin.reflect.jvm.internal.impl.descriptors.PropertyAccessorDescriptor&gt; getOverriddenDescriptors(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor getUnsubstitutedPrimaryConstructor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.VariableDescriptorImpl void setCompileTimeInitializer(kotlin.reflect.jvm.internal.impl.storage.NullableLazyValue&lt;kotlin.reflect.jvm.internal.impl.resolve.constants.CompileTimeConstant&lt;?&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeParameterDescriptor kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageViewDescriptorImpl kotlin.reflect.jvm.internal.impl.name.FqName access$getFqName$1(kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageViewDescriptorImpl)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorBase kotlin.reflect.jvm.internal.impl.descriptors.SourceElement getSource()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeParameterDescriptorImpl createForFurtherModification(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, boolean, kotlin.reflect.jvm.internal.impl.types.Variance, kotlin.reflect.jvm.internal.impl.name.Name, int, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertySetterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyAccessorDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageViewDescriptorImpl PackageViewDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor, kotlin.reflect.jvm.internal.impl.name.FqName, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentDescriptor&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ScriptCodeDescriptor kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeParameterDescriptor kotlin.reflect.jvm.internal.impl.types.TypeConstructor createTypeConstructor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorImpl void initialize(kotlin.reflect.jvm.internal.impl.resolve.scopes.JetScope, java.util.Set&lt;kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor&gt;, kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractReceiverParameterDescriptor kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl ConstructorDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl initialize(kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor, java.util.List, java.util.List, kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.VariableDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.VariableDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.Visibility getVisibility()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl PropertyDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageFragmentDescriptorImpl java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyGetterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor createWithDefaultBound(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, boolean, kotlin.reflect.jvm.internal.impl.types.Variance, kotlin.reflect.jvm.internal.impl.name.Name, int) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl create(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, boolean, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ScriptCodeDescriptor kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageFragmentDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageViewDescriptorImpl PackageViewDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor, kotlin.reflect.jvm.internal.impl.name.FqName, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentDescriptor&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorBase kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor getContainingDeclaration()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl void setReturnType(kotlin.reflect.jvm.internal.impl.types.JetType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazySubstitutingClassDescriptor kotlin.reflect.jvm.internal.impl.resolve.scopes.JetScope getMemberScope(java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.types.TypeProjection&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor&gt; getTypeParameters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.VariableDescriptorImpl VariableDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorImpl DeclarationDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl java.lang.String access$getId$0(kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyGetterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor createWithDefaultBound(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, boolean, kotlin.reflect.jvm.internal.impl.types.Variance, kotlin.reflect.jvm.internal.impl.name.Name, int) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractClassDescriptor kotlin.reflect.jvm.internal.impl.resolve.scopes.JetScope getMemberScope(java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.types.TypeProjection&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl PropertyDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyGetterDescriptorImpl PropertyGetterDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.PropertyGetterDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorVisitorEmptyBodies R visitScriptDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.ScriptDescriptor, D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ScriptCodeDescriptor kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyGetterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyGetterDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor getThisAsReceiverParameter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorNonRootImpl DeclarationDescriptorNonRootImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertySetterDescriptorImpl PropertySetterDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.PropertySetterDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazyClassReceiverParameterDescriptor LazyClassReceiverParameterDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorImpl DeclarationDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazySubstitutingClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorVisitorEmptyBodies R visitScriptDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.ScriptDescriptor, D) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl PropertyDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyGetterDescriptorImpl PropertyGetterDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.PropertyGetterDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl create(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, boolean, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeParameterDescriptorImpl createForFurtherModification(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, boolean, kotlin.reflect.jvm.internal.impl.types.Variance, kotlin.reflect.jvm.internal.impl.name.Name, int, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageViewDescriptorImpl PackageViewDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor, kotlin.reflect.jvm.internal.impl.name.FqName, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentDescriptor&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractReceiverParameterDescriptor kotlin.reflect.jvm.internal.impl.descriptors.Visibility getVisibility()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorNonRootImpl DeclarationDescriptorNonRootImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl ConstructorDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl R accept(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptorVisitor&lt;R,D&gt;, D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertySetterDescriptorImpl PropertySetterDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.PropertySetterDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl java.util.Set&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor&gt; getOverriddenDescriptors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorImpl void initialize(kotlin.reflect.jvm.internal.impl.resolve.scopes.JetScope, java.util.Set&lt;kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor&gt;, kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.VariableDescriptorImpl java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt; getValueParameters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl createSubstitutedCopy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertySetterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl createSetterParameter(kotlin.reflect.jvm.internal.impl.descriptors.PropertySetterDescriptor, kotlin.reflect.jvm.internal.impl.types.JetType)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageViewDescriptorImpl java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentDescriptor&gt; access$getFragments$0(kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageViewDescriptorImpl)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorBase ClassDescriptorBase(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertySetterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeParameterDescriptor kotlin.reflect.jvm.internal.impl.types.JetType getUpperBoundsAsType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl initialize(kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor&gt;, java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt;, kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor kotlin.reflect.jvm.internal.impl.resolve.scopes.JetScope getStaticScope()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertySetterDescriptorImpl kotlin.reflect.jvm.internal.impl.types.JetType getReturnType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorVisitorEmptyBodies R visitConstructorDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor, D) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl void addFriend(kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl createSubstitutedCopy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl initialize(kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor&gt;, java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt;, kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorBase ClassDescriptorBase(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageViewDescriptorImpl kotlin.reflect.jvm.internal.impl.name.FqName getFqName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl create(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, boolean, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractClassDescriptor kotlin.reflect.jvm.internal.impl.resolve.scopes.JetScope getScopeForMemberLookup()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.Visibility getVisibility()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor&gt; getTypeParameters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorVisitorEmptyBodies R visitFunctionDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageViewDescriptorImpl R accept(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptorVisitor&lt;R,D&gt;, D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl createSubstitutedCopy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorVisitorEmptyBodies R visitConstructorDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor, D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl create(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, boolean, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractReceiverParameterDescriptor R accept(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptorVisitor&lt;R,D&gt;, D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ReceiverParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.resolve.scopes.receivers.ReceiverValue getValue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazySubstitutingClassDescriptor kotlin.reflect.jvm.internal.impl.resolve.scopes.JetScope getMemberScope(java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.types.TypeProjection&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageViewDescriptorImpl java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentDescriptor&gt; access$getFragments$0(kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageViewDescriptorImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind getKind()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SubpackagesScope SubpackagesScope(kotlin.reflect.jvm.internal.impl.descriptors.PackageViewDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyGetterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageViewDescriptorImpl kotlin.reflect.jvm.internal.impl.resolve.scopes.JetScope getMemberScope()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageViewDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor getModule()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.SimpleFunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl createSubstitutedCopy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor kotlin.reflect.jvm.internal.impl.types.TypeConstructor getTypeConstructor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl create(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 7'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageFragmentDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.SourceElement getSource()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertySetterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertySetterDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazyClassReceiverParameterDescriptor kotlin.reflect.jvm.internal.impl.resolve.scopes.receivers.ReceiverValue getValue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageFragmentDescriptorImpl PackageFragmentDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor, kotlin.reflect.jvm.internal.impl.name.FqName) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.SimpleFunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeParameterDescriptorImpl void addUpperBound(kotlin.reflect.jvm.internal.impl.types.JetType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl create(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.CompositePackageFragmentProvider CompositePackageFragmentProvider(java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentProvider&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt; getSubstitutedValueParameters(kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl create(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyGetterDescriptorImpl PropertyGetterDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.PropertyGetterDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 8'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.types.JetType getReturnType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.CompositePackageFragmentProvider java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentDescriptor&gt; getPackageFragments(kotlin.reflect.jvm.internal.impl.name.FqName) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.SimpleFunctionDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageViewDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ScriptCodeDescriptor kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl createSubstitutedCopy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazySubstitutingClassDescriptor kotlin.reflect.jvm.internal.impl.name.Name getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SubpackagesScope kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor getContainingDeclaration()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.SimpleFunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractReceiverParameterDescriptor kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeParameterDescriptor java.util.Set&lt;kotlin.reflect.jvm.internal.impl.types.JetType&gt; resolveUpperBounds()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeParameterDescriptor kotlin.reflect.jvm.internal.impl.types.JetType getDefaultType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertySetterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl createSetterParameter(kotlin.reflect.jvm.internal.impl.descriptors.PropertySetterDescriptor, kotlin.reflect.jvm.internal.impl.types.JetType) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt; getSubstitutedValueParameters(kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyGetterDescriptorImpl java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt; getValueParameters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SubpackagesScope void printScopeStructure(kotlin.reflect.jvm.internal.impl.utils.Printer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageViewDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazySubstitutingClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations getAnnotations()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.VariableDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl createSubstitutedCopy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl create(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.SimpleFunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.Modality getModality()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.CompositePackageFragmentProvider java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentDescriptor&gt; getPackageFragments(kotlin.reflect.jvm.internal.impl.name.FqName)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertySetterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl createSetterParameter(kotlin.reflect.jvm.internal.impl.descriptors.PropertySetterDescriptor, kotlin.reflect.jvm.internal.impl.types.JetType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorBase ClassDescriptorBase(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl void setType(kotlin.reflect.jvm.internal.impl.types.JetType, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor&gt;, kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl void addOverriddenDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind getKind()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl ModuleDescriptorImpl(kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.ModuleParameters) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.ParameterDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyAccessorDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl create(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorBase ClassDescriptorBase(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl void addDependencyOnModule(kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl void setType(kotlin.reflect.jvm.internal.impl.types.JetType, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor&gt;, kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl R accept(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptorVisitor&lt;R,D&gt;, D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeParameterDescriptor R accept(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptorVisitor&lt;R,D&gt;, D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SubpackagesScope kotlin.reflect.jvm.internal.impl.descriptors.PackageViewDescriptor getPackage(kotlin.reflect.jvm.internal.impl.name.Name) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazySubstitutingClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.Modality getModality()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ReceiverParameterDescriptorImpl ReceiverParameterDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.resolve.scopes.receivers.ReceiverValue) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl createSubstitutedCopy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl java.lang.String access$getId$0(kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazySubstitutingClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.SourceElement getSource()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ScriptCodeDescriptor kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl initialize(kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor, java.util.List, java.util.List, kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazySubstitutingClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl create(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ScriptCodeDescriptor kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl createSubstitutedCopy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl ModuleDescriptorImpl(kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.ModuleParameters) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorVisitorEmptyBodies R visitPropertyDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, D) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazySubstitutingClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.ClassKind getKind()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl create(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.Visibility getVisibility()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl FunctionDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyGetterDescriptorImpl R accept(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptorVisitor&lt;R,D&gt;, D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor doSubstitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazySubstitutingClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.Visibility getVisibility()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl void addOverriddenDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind getKind()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl ValueParameterDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor, int, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.types.JetType, boolean, kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractLazyTypeParameterDescriptor AbstractLazyTypeParameterDescriptor(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.types.Variance, boolean, int, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.VariableDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyAccessorDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractClassDescriptor void acceptVoid(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptorVisitor&lt;java.lang.Void,java.lang.Void&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl create(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, boolean, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ReceiverParameterDescriptorImpl ReceiverParameterDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.resolve.scopes.receivers.ReceiverValue) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeParameterDescriptor kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorNonRootImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor getContainingDeclaration()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl ModuleDescriptorImpl(kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.ModuleParameters) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorVisitorEmptyBodies R visitPropertyDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.VariableDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl FunctionDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl create(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor getContainingDeclaration()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorVisitorEmptyBodies R visitPackageFragmentDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentDescriptor, D) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl java.util.List&lt;kotlin.reflect.jvm.internal.impl.resolve.ImportPath&gt; getDefaultImports()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl ValueParameterDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor, int, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.types.JetType, boolean, kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl createSubstitutedCopy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor doSubstitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ReceiverParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor getContainingDeclaration()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyAccessorDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ScriptCodeDescriptor kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl createSubstitutedCopy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazyClassReceiverParameterDescriptor kotlin.reflect.jvm.internal.impl.types.JetType getType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertySetterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.Modality getModality()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.VariableDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageFragmentDescriptorImpl PackageFragmentDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor, kotlin.reflect.jvm.internal.impl.name.FqName) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertySetterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl createSubstitutedCopy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageFragmentDescriptorImpl kotlin.reflect.jvm.internal.impl.name.FqName getFqName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl ValueParameterDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor, int, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.types.JetType, boolean, kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorImpl kotlin.reflect.jvm.internal.impl.name.Name getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor doSubstitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl void setVisibility(kotlin.reflect.jvm.internal.impl.descriptors.Visibility) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations getAnnotations()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyAccessorDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl R accept(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptorVisitor&lt;R,D&gt;, D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl java.util.Set&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt; getOverriddenDescriptors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazySubstitutingClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor getContainingDeclaration()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyGetterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyAccessorDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl SimpleFunctionDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.SimpleFunctionDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl FunctionDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl create(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractClassDescriptor kotlin.reflect.jvm.internal.impl.name.Name getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorVisitorEmptyBodies R visitVariableDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.VariableDescriptor, D) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SubpackagesScope java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor&gt; getDescriptors(kotlin.reflect.jvm.internal.impl.resolve.scopes.DescriptorKindFilter, kotlin.jvm.functions.Function1&lt;? super kotlin.reflect.jvm.internal.impl.name.Name,? extends java.lang.Boolean&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorImpl void acceptVoid(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptorVisitor&lt;java.lang.Void,java.lang.Void&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyAccessorDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt; getValueParameters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl initialize(kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor, java.util.List, java.util.List, kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.CompositePackageFragmentProvider java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.name.FqName&gt; getSubPackagesOf(kotlin.reflect.jvm.internal.impl.name.FqName, kotlin.jvm.functions.Function1&lt;? super kotlin.reflect.jvm.internal.impl.name.Name,? extends java.lang.Boolean&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeParameterDescriptorImpl java.util.Set&lt;kotlin.reflect.jvm.internal.impl.types.JetType&gt; resolveUpperBounds()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractLazyTypeParameterDescriptor AbstractLazyTypeParameterDescriptor(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.types.Variance, boolean, int, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.VariableDescriptorImpl java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor&gt; getTypeParameters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ScriptCodeDescriptor ScriptCodeDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.ScriptDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorVisitorEmptyBodies R visitFunctionDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, D) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorVisitorEmptyBodies R visitVariableDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.VariableDescriptor, D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.Visibility getVisibility()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorVisitorEmptyBodies R visitClassDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor, D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageViewDescriptorImpl java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentDescriptor&gt; getFragments()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertySetterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor getOriginal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SubpackagesScope java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor&gt; getDescriptors(kotlin.reflect.jvm.internal.impl.resolve.scopes.DescriptorKindFilter, kotlin.jvm.functions.Function1&lt;? super kotlin.reflect.jvm.internal.impl.name.Name,? extends java.lang.Boolean&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor getCorrespondingProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractClassDescriptor kotlin.reflect.jvm.internal.impl.resolve.scopes.JetScope getMemberScope(java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.types.TypeProjection&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl FunctionDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractLazyTypeParameterDescriptor AbstractLazyTypeParameterDescriptor(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.types.Variance, boolean, int, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl initialize(kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor&gt;, java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt;, kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractReceiverParameterDescriptor java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt; getValueParameters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageFragmentDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.VariableDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.LazySubstitutingClassDescriptor java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor&gt; getConstructors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor doSubstitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, boolean, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractClassDescriptor defaultType'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorVisitorEmptyBodies R visitClassDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor, D) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.name.FqName&gt; getSubPackagesOf(kotlin.reflect.jvm.internal.impl.name.FqName, kotlin.jvm.functions.Function1&lt;? super kotlin.reflect.jvm.internal.impl.name.Name,? extends java.lang.Boolean&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageViewDescriptorImpl kotlin.reflect.jvm.internal.impl.name.FqName access$getFqName$1(kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageViewDescriptorImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertySetterDescriptorImpl java.util.Set&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.PropertyAccessorDescriptor&gt; getOverriddenDescriptors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractLazyTypeParameterDescriptor AbstractLazyTypeParameterDescriptor(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.types.Variance, boolean, int, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ScriptCodeDescriptor void initialize(kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor, java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt;, kotlin.reflect.jvm.internal.impl.types.JetType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl create(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeParameterDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeParameterDescriptorImpl createForFurtherModification(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, boolean, kotlin.reflect.jvm.internal.impl.types.Variance, kotlin.reflect.jvm.internal.impl.name.Name, int, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorVisitorEmptyBodies R visitPackageFragmentDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentDescriptor, D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl kotlin.reflect.jvm.internal.impl.builtins.KotlinBuiltIns getBuiltIns()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ScriptCodeDescriptor kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl java.util.Set&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor&gt; getOverriddenDescriptors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractClassDescriptor AbstractClassDescriptor(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.name.Name) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl void setVisibility(kotlin.reflect.jvm.internal.impl.descriptors.Visibility) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ReceiverParameterDescriptorImpl ReceiverParameterDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.resolve.scopes.receivers.ReceiverValue) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl createSubstitutedCopy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl initialize(kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor, java.util.List, java.util.List, kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ScriptCodeDescriptor void initialize(kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor, java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt;, kotlin.reflect.jvm.internal.impl.types.JetType) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor substitute(kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractLazyTypeParameterDescriptor AbstractLazyTypeParameterDescriptor(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.types.Variance, boolean, int, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.CompositePackageFragmentProvider java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.name.FqName&gt; getSubPackagesOf(kotlin.reflect.jvm.internal.impl.name.FqName, kotlin.jvm.functions.Function1&lt;? super kotlin.reflect.jvm.internal.impl.name.Name,? extends java.lang.Boolean&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractClassDescriptor AbstractClassDescriptor(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.name.Name) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl create(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.Modality getModality()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl ValueParameterDescriptorImpl(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor, int, kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations, kotlin.reflect.jvm.internal.impl.name.Name, kotlin.reflect.jvm.internal.impl.types.JetType, boolean, kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.descriptors.SourceElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractReceiverParameterDescriptor java.util.Set&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor&gt; getOverriddenDescriptors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor kotlin.reflect.jvm.internal.impl.descriptors.ClassKind getKind()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.ConstructorDescriptorImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor copy(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.descriptors.Modality, kotlin.reflect.jvm.internal.impl.descriptors.Visibility, kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind, boolean) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor&gt; getConstructors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
