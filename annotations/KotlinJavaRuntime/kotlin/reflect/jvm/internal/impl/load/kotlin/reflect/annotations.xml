<root>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectKotlinClass kotlin.reflect.jvm.internal.impl.load.kotlin.header.KotlinClassHeader getClassHeader()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectKotlinClass kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectKotlinClass access$init$0(java.lang.Class&lt;?&gt;, kotlin.reflect.jvm.internal.impl.load.kotlin.header.KotlinClassHeader) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectKotlinClass java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.RuntimeModuleData.Companion kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.RuntimeModuleData.Companion access$init$0()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.SignatureSerializer java.lang.String methodDesc(java.lang.reflect.Method) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.SignatureSerializer INSTANCE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.SignatureSerializer java.lang.String constructorDesc(java.lang.reflect.Constructor&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectClassStructure void visitMembers(java.lang.Class&lt;?&gt;, kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinJvmBinaryClass.MemberVisitor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectPackage.ReflectKotlinClass.531b4caf java.util.Set&lt;java.lang.Class&lt;? extends java.lang.Object&gt;&gt; getTYPES_ELIGIBLE_FOR_SIMPLE_VISIT()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectClassStructure INSTANCE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.SignatureSerializer java.lang.String methodDesc(java.lang.reflect.Method)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.SignatureSerializer java.lang.String fieldDesc(java.lang.reflect.Field)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectKotlinClass void visitMembers(kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinJvmBinaryClass.MemberVisitor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectKotlinClass Factory'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectClassStructure void access$processAnnotationArguments$0(kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectClassStructure, kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinJvmBinaryClass.AnnotationArgumentVisitor, java.lang.annotation.Annotation, java.lang.Class&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectClassStructure void loadClassAnnotations(java.lang.Class&lt;?&gt;, kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinJvmBinaryClass.AnnotationVisitor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectKotlinClass java.lang.String getLocation()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.RuntimeModuleData.Companion kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.RuntimeModuleData create(java.lang.ClassLoader) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectPackage java.lang.String toRuntimeFqName(kotlin.reflect.jvm.internal.impl.name.ClassId) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectPackage java.lang.String toRuntimeFqName(kotlin.reflect.jvm.internal.impl.name.ClassId)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectKotlinClassFinder kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinJvmBinaryClass findKotlinClass(kotlin.reflect.jvm.internal.impl.load.java.structure.JavaClass) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectClassStructure void access$processAnnotationArguments$0(kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectClassStructure, kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinJvmBinaryClass.AnnotationArgumentVisitor, java.lang.annotation.Annotation, java.lang.Class&lt;?&gt;) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.RuntimeModuleData Companion'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.RuntimeModuleData OBJECT$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectKotlinClass OBJECT$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectClassStructure void visitMembers(java.lang.Class&lt;?&gt;, kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinJvmBinaryClass.MemberVisitor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectKotlinClass.Factory kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectKotlinClass create(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectPackage java.util.Set&lt;java.lang.Class&lt;? extends java.lang.Object&gt;&gt; getTYPES_ELIGIBLE_FOR_SIMPLE_VISIT()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.RuntimeModuleData kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.RuntimeModuleData access$init$0(kotlin.reflect.jvm.internal.impl.di.InjectorForRuntimeDescriptorLoader) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectKotlinClass kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectKotlinClass access$init$0(java.lang.Class&lt;?&gt;, kotlin.reflect.jvm.internal.impl.load.kotlin.header.KotlinClassHeader) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.RuntimeModuleData kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.RuntimeModuleData access$init$0(kotlin.reflect.jvm.internal.impl.di.InjectorForRuntimeDescriptorLoader)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectKotlinClassFinder ReflectKotlinClassFinder(java.lang.ClassLoader) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.RuntimeModuleData kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor getModule()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectPackage.ReflectKotlinClassFinder.5f7fe8a9 java.lang.String toRuntimeFqName(kotlin.reflect.jvm.internal.impl.name.ClassId) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.SignatureSerializer java.lang.String constructorDesc(java.lang.reflect.Constructor&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.SignatureSerializer java.lang.String fieldDesc(java.lang.reflect.Field) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectKotlinClassFinder kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinJvmBinaryClass findKotlinClass(kotlin.reflect.jvm.internal.impl.name.ClassId) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.RuntimeModuleData kotlin.reflect.jvm.internal.impl.serialization.deserialization.LocalClassResolver getLocalClassResolver()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.RuntimeModuleData.Companion kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.RuntimeModuleData create(java.lang.ClassLoader)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectPackage.ReflectKotlinClassFinder.5f7fe8a9 java.lang.String toRuntimeFqName(kotlin.reflect.jvm.internal.impl.name.ClassId)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectClassStructure void access$processAnnotationArguments$0(kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectClassStructure, kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinJvmBinaryClass.AnnotationArgumentVisitor, java.lang.annotation.Annotation, java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectKotlinClass kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectKotlinClass access$init$0(java.lang.Class&lt;?&gt;, kotlin.reflect.jvm.internal.impl.load.kotlin.header.KotlinClassHeader)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectKotlinClass.Factory kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectKotlinClass.Factory access$init$0()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectKotlinClass void loadClassAnnotations(kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinJvmBinaryClass.AnnotationVisitor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectKotlinClass kotlin.reflect.jvm.internal.impl.name.ClassId getClassId()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectClassStructure void access$processAnnotationArguments$0(kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectClassStructure, kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinJvmBinaryClass.AnnotationArgumentVisitor, java.lang.annotation.Annotation, java.lang.Class&lt;?&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.ReflectClassStructure void loadClassAnnotations(java.lang.Class&lt;?&gt;, kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinJvmBinaryClass.AnnotationVisitor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
