<root>
    <item name='kotlin.reflect.jvm.internal.impl.platform.JavaToKotlinClassMap kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor mapJavaToKotlin(kotlin.reflect.jvm.internal.impl.name.FqName) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.platform.JavaToKotlinClassMap java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor&gt; mapPlatformClass(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.platform.PlatformToKotlinClassMap EMPTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.platform.JavaToKotlinClassMap java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor&gt; allKotlinClasses()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.platform.JavaToKotlinClassMap kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor convertReadOnlyToMutable(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.platform.JavaToKotlinClassMap kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor convertMutableToReadOnly(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.platform.JavaToKotlinClassMap java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor&gt; mapPlatformClass(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.platform.JavaToKotlinClassMap kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor convertReadOnlyToMutable(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.platform.JavaToKotlinClassMap kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor convertMutableToReadOnly(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.platform.JavaToKotlinClassMap boolean isMutableCollection(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.platform.JavaToKotlinClassMap java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor&gt; mapPlatformClass(kotlin.reflect.jvm.internal.impl.name.FqName) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.platform.PlatformToKotlinClassMap java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor&gt; mapPlatformClass(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.platform.JavaToKotlinClassMap kotlin.reflect.jvm.internal.impl.name.ClassId mapKotlinToJava(kotlin.reflect.jvm.internal.impl.name.FqNameUnsafe) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.platform.PlatformToKotlinClassMap java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor&gt; mapPlatformClass(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.platform.JavaToKotlinClassMap INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.platform.JavaToKotlinClassMap boolean isReadOnlyCollection(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.platform.JavaToKotlinClassMap java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor&gt; mapPlatformClass(kotlin.reflect.jvm.internal.impl.name.FqName)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
