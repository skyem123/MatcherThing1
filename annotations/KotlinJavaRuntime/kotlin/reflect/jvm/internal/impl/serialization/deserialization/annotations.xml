<root>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader java.util.List&lt;A&gt; loadClassAnnotations(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Class, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.ErrorReporter void reportIncompleteHierarchy(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor, java.util.List&lt;java.lang.String&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedPackageFragment DeserializedPackageFragment(kotlin.reflect.jvm.internal.impl.name.FqName, kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor, kotlin.reflect.jvm.internal.impl.serialization.SerializedResourcePaths, kotlin.jvm.functions.Function1&lt;? super java.lang.String,? extends java.io.InputStream&gt;) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer TypeDeserializer(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext, kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.TypeParameter&gt;, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationDeserializer kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor access$resolveClass$1(kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationDeserializer, kotlin.reflect.jvm.internal.impl.name.ClassId)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedType kotlin.reflect.jvm.internal.impl.resolve.scopes.JetScope access$getTypeMemberScope$1(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedType, kotlin.reflect.jvm.internal.impl.types.TypeConstructor, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.types.TypeProjection&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer kotlin.reflect.jvm.internal.impl.types.JetType type(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Type)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationDeserializer kotlin.Pair&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor,kotlin.reflect.jvm.internal.impl.resolve.constants.CompileTimeConstant&lt;?&gt;&gt; access$resolveArgument$0(kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationDeserializer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Annotation.Argument, java.util.Map&lt;kotlin.reflect.jvm.internal.impl.name.Name,? extends kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt;, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDeserializer getClassDeserializer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext childContext(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.TypeParameter&gt;, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations access$getParameterAnnotations$2(kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer, kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable.ValueParameter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents kotlin.reflect.jvm.internal.impl.serialization.deserialization.FlexibleTypeCapabilitiesDeserializer getFlexibleTypeCapabilitiesDeserializer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage kotlin.reflect.jvm.internal.impl.types.Variance variance(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.TypeParameter.Variance) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage kotlin.reflect.jvm.internal.impl.types.Variance variance(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.TypeParameter.Variance)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.FlexibleTypeCapabilitiesDeserializer.Dynamic INSTANCE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext childContext$default(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, java.util.List, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, int) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.LocalClassResolver kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor resolveLocalClass(kotlin.reflect.jvm.internal.impl.name.ClassId) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext access$getC$2(kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver read(java.io.InputStream)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader java.util.List&lt;A&gt; loadClassAnnotations(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Class, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage.protoEnumMapping.8421ca3b kotlin.reflect.jvm.internal.impl.descriptors.Modality modality(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Modality)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedPackageFragment DeserializedPackageFragment(kotlin.reflect.jvm.internal.impl.name.FqName, kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor, kotlin.reflect.jvm.internal.impl.serialization.SerializedResourcePaths, kotlin.jvm.functions.Function1&lt;? super java.lang.String,? extends java.io.InputStream&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage.protoEnumMapping.8421ca3b kotlin.reflect.jvm.internal.impl.descriptors.ClassKind classKind(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Class.Kind)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.ErrorReporter void reportIncompleteHierarchy(kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor, java.util.List&lt;java.lang.String&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer TypeDeserializer(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext, kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.TypeParameter&gt;, java.lang.String) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationDeserializer kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor access$resolveClass$1(kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationDeserializer, kotlin.reflect.jvm.internal.impl.name.ClassId) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver read(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage.protoEnumMapping.8421ca3b kotlin.reflect.jvm.internal.impl.descriptors.Visibility visibility(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Visibility)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext DeserializationContext(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.TypeParameter&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext childContext(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.TypeParameter&gt;, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationDeserializer kotlin.Pair&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor,kotlin.reflect.jvm.internal.impl.resolve.constants.CompileTimeConstant&lt;?&gt;&gt; access$resolveArgument$0(kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationDeserializer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Annotation.Argument, java.util.Map&lt;kotlin.reflect.jvm.internal.impl.name.Name,? extends kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt;, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader java.util.List&lt;A&gt; loadTypeAnnotations(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Type, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage.protoEnumMapping.8421ca3b kotlin.reflect.jvm.internal.impl.descriptors.Modality modality(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Modality) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver java.lang.String getString(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext childContext$default(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, java.util.List, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer getTypeDeserializer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedPackageFragment kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents getComponents()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader java.util.List&lt;A&gt; loadValueParameterAnnotations(kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable.ValueParameter)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedPackageFragment DeserializedPackageFragment(kotlin.reflect.jvm.internal.impl.name.FqName, kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor, kotlin.reflect.jvm.internal.impl.serialization.SerializedResourcePaths, kotlin.jvm.functions.Function1&lt;? super java.lang.String,? extends java.io.InputStream&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationDeserializer kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor access$resolveClass$1(kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationDeserializer, kotlin.reflect.jvm.internal.impl.name.ClassId) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationDeserializer kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationDescriptor deserializeAnnotation(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Annotation, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer kotlin.reflect.jvm.internal.impl.types.JetType type(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationDeserializer kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationDescriptor deserializeAnnotation(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Annotation, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationDeserializer kotlin.Pair&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor,kotlin.reflect.jvm.internal.impl.resolve.constants.CompileTimeConstant&lt;?&gt;&gt; access$resolveArgument$0(kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationDeserializer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Annotation.Argument, java.util.Map&lt;kotlin.reflect.jvm.internal.impl.name.Name,? extends kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt;, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage.protoEnumMapping.8421ca3b kotlin.reflect.jvm.internal.impl.descriptors.Visibility visibility(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Visibility) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext childContext(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.TypeParameter&gt;, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.FlexibleTypeCapabilitiesDeserializer kotlin.reflect.jvm.internal.impl.types.FlexibleTypeCapabilities capabilitiesById(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.ErrorReporter void reportIncompatibleAbiVersion(kotlin.reflect.jvm.internal.impl.name.ClassId, java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDeserializer kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor deserializeClass$default(kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDeserializer, kotlin.reflect.jvm.internal.impl.name.ClassId, kotlin.reflect.jvm.internal.impl.serialization.ClassData, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedPackageFragment DeserializedPackageFragment(kotlin.reflect.jvm.internal.impl.name.FqName, kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor, kotlin.reflect.jvm.internal.impl.serialization.SerializedResourcePaths, kotlin.jvm.functions.Function1&lt;? super java.lang.String,? extends java.io.InputStream&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents kotlin.reflect.jvm.internal.impl.storage.StorageManager getStorageManager()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext access$getC$1(kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedPackageFragment java.io.InputStream loadResourceSure(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents getComponents()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationDeserializer kotlin.Pair&lt;kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor,kotlin.reflect.jvm.internal.impl.resolve.constants.CompileTimeConstant&lt;?&gt;&gt; access$resolveArgument$0(kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationDeserializer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Annotation.Argument, java.util.Map&lt;kotlin.reflect.jvm.internal.impl.name.Name,? extends kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor&gt;, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage kotlin.reflect.jvm.internal.impl.descriptors.Modality modality(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Modality)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor findClassAcrossModuleDependencies(kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor, kotlin.reflect.jvm.internal.impl.name.ClassId) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.ErrorReporter void reportIncompatibleAbiVersion(kotlin.reflect.jvm.internal.impl.name.ClassId, java.lang.String, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind FUNCTION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext childContext$default(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, java.util.List, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, int) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDeserializer kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor deserializeClass$default(kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDeserializer, kotlin.reflect.jvm.internal.impl.name.ClassId, kotlin.reflect.jvm.internal.impl.serialization.ClassData, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext DeserializationContext(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.TypeParameter&gt;) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedPackageFragment kotlin.reflect.jvm.internal.impl.storage.StorageManager getStorageManager()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedPackageFragment java.io.InputStream loadResourceSure(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind memberKind(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable.MemberKind)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind PROPERTY_SETTER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents DeserializationComponents(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor, kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDataFinder, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader&lt;kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationDescriptor,kotlin.reflect.jvm.internal.impl.resolve.constants.CompileTimeConstant&lt;?&gt;&gt;, kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentProvider, kotlin.reflect.jvm.internal.impl.serialization.deserialization.LocalClassResolver, kotlin.reflect.jvm.internal.impl.serialization.deserialization.FlexibleTypeCapabilitiesDeserializer, kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDescriptorFactory) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor findClassAcrossModuleDependencies(kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor, kotlin.reflect.jvm.internal.impl.name.ClassId) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationDeserializer kotlin.reflect.jvm.internal.impl.resolve.constants.CompileTimeConstant&lt;?&gt; resolveValue(kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Annotation.Argument.Value, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.ResourceLoadingClassDataFinder ResourceLoadingClassDataFinder(kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentProvider, kotlin.reflect.jvm.internal.impl.serialization.SerializedResourcePaths, kotlin.jvm.functions.Function1&lt;? super java.lang.String,? extends java.io.InputStream&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedPackageFragment java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.name.Name&gt; loadClassNames(kotlin.reflect.jvm.internal.impl.name.FqName, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Package)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind memberKind(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable.MemberKind) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationDeserializer kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationDescriptor deserializeAnnotation(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Annotation, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedType kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Type access$getTypeProto$3(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedType)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage.protoEnumMapping.8421ca3b kotlin.reflect.jvm.internal.impl.descriptors.ClassKind classKind(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Class.Kind) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDataFinder getClassDataFinder()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents DeserializationComponents(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor, kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDataFinder, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader&lt;kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationDescriptor,kotlin.reflect.jvm.internal.impl.resolve.constants.CompileTimeConstant&lt;?&gt;&gt;, kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentProvider, kotlin.reflect.jvm.internal.impl.serialization.deserialization.LocalClassResolver, kotlin.reflect.jvm.internal.impl.serialization.deserialization.FlexibleTypeCapabilitiesDeserializer, kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDescriptorFactory) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentProvider getPackageFragmentProvider()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.ResourceLoadingClassDataFinder kotlin.reflect.jvm.internal.impl.serialization.ClassData findClassData(kotlin.reflect.jvm.internal.impl.name.ClassId) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer copy(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Class, kotlin.reflect.jvm.internal.impl.name.FqName)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.ResourceLoadingClassDataFinder ResourceLoadingClassDataFinder(kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentProvider, kotlin.reflect.jvm.internal.impl.serialization.SerializedResourcePaths, kotlin.jvm.functions.Function1&lt;? super java.lang.String,? extends java.io.InputStream&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind PROPERTY_GETTER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer kotlin.reflect.jvm.internal.impl.name.FqName getFqName(kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer TypeDeserializer(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext, kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.TypeParameter&gt;, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext childContext(kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.TypeParameter&gt;, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedPackageFragment void setDeserializationComponents(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDeserializer kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor access$createClass$0(kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDeserializer, kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDeserializer.ClassKey) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedPackageFragment kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver getNameResolver()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor deserializeClass(kotlin.reflect.jvm.internal.impl.name.ClassId) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedType kotlin.reflect.jvm.internal.impl.resolve.scopes.JetScope access$getTypeMemberScope$1(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedType, kotlin.reflect.jvm.internal.impl.types.TypeConstructor, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.types.TypeProjection&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage.protoEnumMapping.8421ca3b kotlin.reflect.jvm.internal.impl.types.Variance variance(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Type.Argument.Projection)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer kotlin.reflect.jvm.internal.impl.types.TypeConstructor typeConstructor(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader java.util.List&lt;A&gt; loadClassAnnotations(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Class, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext DeserializationContext(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.TypeParameter&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDeserializer kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor access$createClass$0(kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDeserializer, kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDeserializer.ClassKey) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedType kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Type access$getTypeProto$3(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents DeserializationComponents(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor, kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDataFinder, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader&lt;kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationDescriptor,kotlin.reflect.jvm.internal.impl.resolve.constants.CompileTimeConstant&lt;?&gt;&gt;, kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentProvider, kotlin.reflect.jvm.internal.impl.serialization.deserialization.LocalClassResolver, kotlin.reflect.jvm.internal.impl.serialization.deserialization.FlexibleTypeCapabilitiesDeserializer, kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDescriptorFactory) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext access$getC$2(kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader&lt;kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationDescriptor,kotlin.reflect.jvm.internal.impl.resolve.constants.CompileTimeConstant&lt;?&gt;&gt; getAnnotationAndConstantLoader()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.LocalClassResolverImpl void setComponents(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedPackageFragment DeserializedPackageFragment(kotlin.reflect.jvm.internal.impl.name.FqName, kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor, kotlin.reflect.jvm.internal.impl.serialization.SerializedResourcePaths, kotlin.jvm.functions.Function1&lt;? super java.lang.String,? extends java.io.InputStream&gt;) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor access$computeClassDescriptor$0(kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer java.util.List&lt;kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor&gt; getOwnTypeParameters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedType kotlin.reflect.jvm.internal.impl.resolve.scopes.JetScope access$getTypeMemberScope$1(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedType, kotlin.reflect.jvm.internal.impl.types.TypeConstructor, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.types.TypeProjection&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents DeserializationComponents(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor, kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDataFinder, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader&lt;kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationDescriptor,kotlin.reflect.jvm.internal.impl.resolve.constants.CompileTimeConstant&lt;?&gt;&gt;, kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentProvider, kotlin.reflect.jvm.internal.impl.serialization.deserialization.LocalClassResolver, kotlin.reflect.jvm.internal.impl.serialization.deserialization.FlexibleTypeCapabilitiesDeserializer, kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDescriptorFactory) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDescriptorFactory getFictitiousClassDescriptorFactory()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext DeserializationContext(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.TypeParameter&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedType kotlin.reflect.jvm.internal.impl.resolve.scopes.JetScope access$getTypeMemberScope$1(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedType, kotlin.reflect.jvm.internal.impl.types.TypeConstructor, java.util.List&lt;? extends kotlin.reflect.jvm.internal.impl.types.TypeProjection&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer kotlin.reflect.jvm.internal.impl.types.TypeConstructor typeConstructor(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Type)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.ResourceLoadingClassDataFinder ResourceLoadingClassDataFinder(kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentProvider, kotlin.reflect.jvm.internal.impl.serialization.SerializedResourcePaths, kotlin.jvm.functions.Function1&lt;? super java.lang.String,? extends java.io.InputStream&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor loadConstructor(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationDeserializer kotlin.reflect.jvm.internal.impl.resolve.constants.CompileTimeConstant&lt;?&gt; resolveValue(kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Annotation.Argument.Value, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents DeserializationComponents(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor, kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDataFinder, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader&lt;kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationDescriptor,kotlin.reflect.jvm.internal.impl.resolve.constants.CompileTimeConstant&lt;?&gt;&gt;, kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentProvider, kotlin.reflect.jvm.internal.impl.serialization.deserialization.LocalClassResolver, kotlin.reflect.jvm.internal.impl.serialization.deserialization.FlexibleTypeCapabilitiesDeserializer, kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDescriptorFactory) 7'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader java.util.List&lt;A&gt; loadValueParameterAnnotations(kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable.ValueParameter) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer java.util.List&lt;kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.TypeParameter&gt; access$getTypeParameterProtos$1(kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.LocalClassResolverImpl kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor resolveLocalClass(kotlin.reflect.jvm.internal.impl.name.ClassId) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer getMemberDeserializer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedType E access$getOrNull$2(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedType, java.util.List&lt;? extends E&gt;, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedPackageFragment java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.name.Name&gt; loadClassNames(kotlin.reflect.jvm.internal.impl.name.FqName, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Package) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader C loadPropertyConstant(kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, kotlin.reflect.jvm.internal.impl.types.JetType) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader java.util.List&lt;A&gt; loadCallableAnnotations(kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext createContext(kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentDescriptor, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader java.util.List&lt;A&gt; loadCallableAnnotations(kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationDeserializer kotlin.reflect.jvm.internal.impl.resolve.constants.CompileTimeConstant&lt;?&gt; resolveValue(kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Annotation.Argument.Value, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents DeserializationComponents(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor, kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDataFinder, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader&lt;kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationDescriptor,kotlin.reflect.jvm.internal.impl.resolve.constants.CompileTimeConstant&lt;?&gt;&gt;, kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentProvider, kotlin.reflect.jvm.internal.impl.serialization.deserialization.LocalClassResolver, kotlin.reflect.jvm.internal.impl.serialization.deserialization.FlexibleTypeCapabilitiesDeserializer, kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDescriptorFactory) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer copy$default(kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Class, kotlin.reflect.jvm.internal.impl.name.FqName, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedPackageFragment java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.name.Name&gt; loadClassNames(kotlin.reflect.jvm.internal.impl.name.FqName, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Package) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage.protoEnumMapping.8421ca3b kotlin.reflect.jvm.internal.impl.types.Variance variance(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Type.Argument.Projection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.FlexibleTypeCapabilitiesDeserializer.ThrowException INSTANCE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader java.util.List&lt;A&gt; loadCallableAnnotations(kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedType kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer access$getTypeDeserializer$0(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedType)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.StringTable getStringTable()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.ErrorReporter void reportCannotInferVisibility(kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader java.util.List&lt;A&gt; loadCallableAnnotations(kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader C loadPropertyConstant(kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, kotlin.reflect.jvm.internal.impl.types.JetType) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationDeserializer kotlin.reflect.jvm.internal.impl.resolve.constants.CompileTimeConstant&lt;?&gt; resolveValue(kotlin.reflect.jvm.internal.impl.types.JetType, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Annotation.Argument.Value, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDeserializer kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor deserializeClass(kotlin.reflect.jvm.internal.impl.name.ClassId, kotlin.reflect.jvm.internal.impl.serialization.ClassData) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer copy$default(kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Class, kotlin.reflect.jvm.internal.impl.name.FqName, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage kotlin.reflect.jvm.internal.impl.types.Variance variance(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Type.Argument.Projection)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents DeserializationComponents(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor, kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDataFinder, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader&lt;kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationDescriptor,kotlin.reflect.jvm.internal.impl.resolve.constants.CompileTimeConstant&lt;?&gt;&gt;, kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentProvider, kotlin.reflect.jvm.internal.impl.serialization.deserialization.LocalClassResolver, kotlin.reflect.jvm.internal.impl.serialization.deserialization.FlexibleTypeCapabilitiesDeserializer, kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDescriptorFactory) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.ErrorReporter void reportLoadingError(java.lang.String, java.lang.Exception) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedPackageFragment void setComponents(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDescriptorFactory kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor createClass(kotlin.reflect.jvm.internal.impl.name.ClassId) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage kotlin.reflect.jvm.internal.impl.descriptors.Visibility visibility(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Visibility) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver kotlin.reflect.jvm.internal.impl.name.ClassId getClassId(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext kotlin.reflect.jvm.internal.impl.storage.StorageManager getStorageManager()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext createContext(kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentDescriptor, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage.protoEnumMapping.8421ca3b kotlin.reflect.jvm.internal.impl.types.Variance variance(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.TypeParameter.Variance)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader C loadPropertyConstant(kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, kotlin.reflect.jvm.internal.impl.types.JetType) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage kotlin.reflect.jvm.internal.impl.descriptors.Modality modality(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Modality) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.FlexibleTypeCapabilitiesDeserializer.ThrowException kotlin.reflect.jvm.internal.impl.types.FlexibleTypeCapabilities capabilitiesById(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer MemberDeserializer(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor loadConstructor(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage kotlin.reflect.jvm.internal.impl.descriptors.Visibility visibility(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Visibility)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext access$getC$1(kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDataFinder kotlin.reflect.jvm.internal.impl.serialization.ClassData findClassData(kotlin.reflect.jvm.internal.impl.name.ClassId) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver kotlin.reflect.jvm.internal.impl.name.Name getName(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents DeserializationComponents(kotlin.reflect.jvm.internal.impl.storage.StorageManager, kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor, kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDataFinder, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader&lt;kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationDescriptor,kotlin.reflect.jvm.internal.impl.resolve.constants.CompileTimeConstant&lt;?&gt;&gt;, kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentProvider, kotlin.reflect.jvm.internal.impl.serialization.deserialization.LocalClassResolver, kotlin.reflect.jvm.internal.impl.serialization.deserialization.FlexibleTypeCapabilitiesDeserializer, kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDescriptorFactory) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader java.util.List&lt;A&gt; loadTypeAnnotations(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Type, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedType kotlin.reflect.jvm.internal.impl.types.TypeConstructor getConstructor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage kotlin.reflect.jvm.internal.impl.descriptors.ClassKind classKind(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Class.Kind) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage kotlin.reflect.jvm.internal.impl.descriptors.ClassKind classKind(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Class.Kind)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer kotlin.reflect.jvm.internal.impl.types.TypeProjection typeArgument(kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Type.Argument)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor loadCallable(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage kotlin.reflect.jvm.internal.impl.types.Variance variance(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Type.Argument.Projection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDescriptorFactory.EMPTY INSTANCE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader java.util.List&lt;A&gt; loadValueParameterAnnotations(kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable.ValueParameter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations access$getParameterAnnotations$2(kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer, kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable.ValueParameter) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader java.util.List&lt;A&gt; loadCallableAnnotations(kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedPackageFragment kotlin.reflect.jvm.internal.impl.resolve.scopes.JetScope getMemberScope()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader java.util.List&lt;A&gt; loadTypeAnnotations(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Type, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer access$asProtoContainer$0(kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents kotlin.reflect.jvm.internal.impl.serialization.deserialization.LocalClassResolver getLocalClassResolver()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedType DeserializedType(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Type) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage.findClassInModule.18907d1e kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor findClassAcrossModuleDependencies(kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor, kotlin.reflect.jvm.internal.impl.name.ClassId) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage.protoEnumMapping.8421ca3b kotlin.reflect.jvm.internal.impl.types.Variance variance(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.TypeParameter.Variance) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedType java.util.List&lt;kotlin.reflect.jvm.internal.impl.types.TypeProjection&gt; getArguments()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext childContext$default(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, java.util.List, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader C loadPropertyConstant(kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, kotlin.reflect.jvm.internal.impl.types.JetType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver NameResolver(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.StringTable, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.QualifiedNameTable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDeserializer ClassDeserializer(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.LocalClassResolverImpl kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents getComponents()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer access$asProtoContainer$0(kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader java.util.List&lt;A&gt; loadValueParameterAnnotations(kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable.ValueParameter) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDescriptorFactory.EMPTY kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor createClass(kotlin.reflect.jvm.internal.impl.name.ClassId) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedType kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer access$getTypeDeserializer$0(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations access$getParameterAnnotations$2(kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer, kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable.ValueParameter) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor getContainingDeclaration()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.QualifiedNameTable getQualifiedNameTable()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver NameResolver(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.StringTable, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.QualifiedNameTable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext createContext(kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentDescriptor, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage.findClassInModule.18907d1e kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor findClassAcrossModuleDependencies(kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor, kotlin.reflect.jvm.internal.impl.name.ClassId) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedType DeserializedType(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations access$getParameterAnnotations$2(kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer, kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable.ValueParameter)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer java.util.List&lt;kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.TypeParameter&gt; access$getTypeParameterProtos$1(kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader java.util.List&lt;A&gt; loadValueParameterAnnotations(kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable.ValueParameter) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations access$getParameterAnnotations$2(kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer, kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable.ValueParameter) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver getNameResolver()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver kotlin.reflect.jvm.internal.impl.name.FqName getFqName(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor getModuleDescriptor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext childContext$default(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext, kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor, java.util.List, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationDeserializer AnnotationDeserializer(kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedPackageFragment kotlin.reflect.jvm.internal.impl.serialization.SerializedResourcePaths getSerializedResourcePaths()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedType kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations getAnnotations()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage.protoEnumMapping.8421ca3b kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind memberKind(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable.MemberKind) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedType kotlin.reflect.jvm.internal.impl.resolve.scopes.JetScope getMemberScope()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationPackage.protoEnumMapping.8421ca3b kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor.Kind memberKind(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable.MemberKind)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.LocalClassResolverImpl void setDeserializationComponents(kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader java.util.List&lt;A&gt; loadValueParameterAnnotations(kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable.ValueParameter) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.FlexibleTypeCapabilitiesDeserializer.Dynamic kotlin.reflect.jvm.internal.impl.types.FlexibleTypeCapabilities capabilitiesById(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor loadCallable(kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations access$getParameterAnnotations$2(kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer, kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable, kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Callable.ValueParameter) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer kotlin.reflect.jvm.internal.impl.types.TypeProjection typeArgument(kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Type.Argument) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
